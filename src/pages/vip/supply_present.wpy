<template>
	<Tips/>
	<view class="container" wx:if="{{init}}">
		<form @submit="submit">
			<view class="title">
				<text class="title-size">规则名称</text>
			</view>
			<repeat for="{{presents}}" key="present" index="index" item="item">
				<Present :info.sync="item" index.sync="index" @remove.user="remove"
									@change.user="change" @category.user="category"/>
			</repeat>

			<!--添加商品型号-->
			<view class="sku-add-btn row-end" @tap="add">
				<image class="icon" src="/images/icons/plus.png"/>
				<text class="ml10">添加满赠规则</text>
			</view>
			<ActionPanel submitText="确定"/>
		</form>
	</view>
</template>
<script>
  import wepy from 'wepy';
  import base from '../../mixins/base';
  import Present from '../../components/vip/present';
  import FormTips from '../../components/weui/tips';
  import ActionPanel from '../../components/common/action_panel';
  import input from '../../mixins/input';
  import Tips from '../../utils/Tips';
  import Event from '../../utils/Event';

  export default class SupplyFullGift extends wepy.page {
    data = {
      init: false,
      presents: [{}]
    };
    async onLoad ({present}) {
      if (present != null && present != 'null') {
        this.presents = JSON.parse(present);
        const presents = [];
        this.presents.forEach(item => {
          item.presentCategoryLists = [{
            cardId: 1,
            categoryId: 46
          }]
          const data = {...item};
          data.present /= 100;
          presents.push(data);
        });
        this.presents = presents;
      }
      if (this.presents.length == 0) {
        this.presents[0] = {
          upgradeFee: 0,
          presentCategoryLists: []
        };
      }
      Event.listen(Event.VIP_CATEGORY_UPDATA, this.categoryUpdate.bind(this), this);
      this.loaded();
    };

    categoryUpdate ({list, index}) {
      if (list != null && index != null) {
        this.presents[index].presentCategoryLists = list;
      }
    };

    methods = {
      async submit () {
        if (!this.validate()) {
          return;
        }
        const presents = [];
        this.presents.forEach((item, index) => {
          const data = {...item};
          data.discount *= 100;
          data.level = index + 1;
          if (index == 0) {
            data.upgradeFee = 0;
          }
          presents.push(data);
        });
        await Tips.success('保存成功');
        Event.emit(Event.SHOP_PRESENT_UPDATE, presents);
        wepy.navigateBack();
      },
      async category ({presentCategoryLists}, index) {
        this.$preload('data', {
          presentCategoryLists, index
        });
        this.$navigate('present_category');
      },
      add () {
        this.presents.push({
          presentCategoryLists: []
        });
      },
      remove (index) {
        this.presents.splice(index, 1);
      },
      change (info) {
        this.presents[info.index][info.fieldName] = info.fieldValue;
      }
    };

    validate () {
      const ruleName = this.presents.map(item => item.ruleName);
      const limitCount = this.presents.map(item => item.limitCount);
      const unit = this.presents.map(item => item.unit);
      let rules = [
        {
          value: unit,
          method: 'required',
          message: '单位不能为空'
        },
        {
          value: ruleName,
          method: 'required',
          message: '规则名称不能为空'
        },
        {
          value: ruleName,
          method: 'minlength',
          param: 2,
          message: '规则名称太短'
        },
        {
          value: ruleName,
          method: 'maxlength',
          param: 20,
          message: '规则名称太长'
        },
        {
          value: ruleName,
          method: 'noDuplicate',
          message: '规则名称不能重复'
        },
        {
          value: limitCount,
          method: 'required',
          message: '满赠要求不能为空'
        },
        {
          value: limitCount,
          method: 'number',
          message: '满赠要求必须为数字'
        },
        {
          value: limitCount,
          method: 'min',
          param: 0,
          message: '满赠要求不能小于0'
        }
      ];
      return this.check(rules);
    }

    components = {
      Present: Present,
      Tips: FormTips,
      ActionPanel: ActionPanel
    };
    config = {
      navigationBarTitleText: '会员等级编辑'
    };
    mixins = [input, base];
  }
</script>
<style lang="scss">
	@import "../../styles/variable";

	.sku-add-btn {
		padding: 10px 20px;
	}

	.title {
		height: 30rpx;
		padding: 10rpx 0rpx 20rpx 30rpx;
		align-content: center;
		.title-size {
			font-size: 30rpx;
			color: $color-muted;
		}
	}
</style>
