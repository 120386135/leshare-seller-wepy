<template>
  <Tips />
  <view class="page" wx:if="{{init}}">
    <view class="brand column-center">
      <image class="logo" src="/images/home/shop-logo.png"/>
      <text>乐享商家助手</text>
    </view>

    <!--一键登录-->
    <view class="weui-btn-area" wx:if="{{mode == 'fast'}}">
      <button class="weui-btn" open-type="getPhoneNumber" bindgetphonenumber="fastLogin" type="primary">一键登录</button>
      <view class="mt20 column-center">
        <text class="muted">提示：一键登录将登录将获取您本机号码，请允许授权</text>
        <text class="mt20 primary" @tap="switchMode('sms')">[切换到验证码登录]</text>
      </view>
    </view>

    <!--验证码登录-->
    <form @submit="confirm" wx:else>
      <view class="page__bd form">
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_input weui-cell_vcode">
            <view class="weui-cell__hd">
              <view class="weui-label">手机号</view>
            </view>
            <view class="weui-cell__bd">
              <input class="weui-input" id="phone" @input="input" type="number" maxlength="11" placeholder="请输入手机号"/>
            </view>
            <view class="weui-cell__ft">
              <VCode @tap.user="code"/>
            </view>
          </view>
          <view class="weui-cell weui-cell_input weui-cell_vcode">
            <view class="weui-cell__hd">
              <view class="weui-label">验证码</view>
            </view>
            <view class="weui-cell__bd">
              <input class="weui-input" type="number" name="code" maxlength="6" placeholder="请输入验证码"/>
            </view>
          </view>
        </view>

        <view class="weui-btn-area">
          <button class="weui-btn" type="primary" form-type="submit">确定</button>
          <view class="column-center">
            <text class="mt20 primary" @tap="switchMode('fast')">[切换到一键登录]</text>
          </view>
        </view>
      </view>
    </form>

  </view>

  <Copyright buttom="true" />

</template>
<script>
  import wepy from 'wepy';
  import auth from '../../api/auth';
  import shop from '../../api/shop';
  import base from '../../mixins/base';
  import input from '../../mixins/input';
  import FormTips from '../../components/weui/tips';
  import VCode from '../../components/weui/vcode';
  import Tips from '../../utils/Tips';
  import WxUtils from '../../utils/WxUtils';
  import Copyright from '../../components/common/copyright';
  export default class Login extends wepy.page {
    def = {
      init: false,
      loginMassage: {},
      mode: 'fast',
      redirectUrl: null,
    };
    data = {...this.def};
    async onLoad (param, {preload}) {
      if (preload && preload.redirectUrl) {
        this.redirectUrl = preload.redirectUrl;
      }
      try {
        const loginCode = auth.getConfig('login_code');
        console.debug(`login_code: ${loginCode}`);
        if (loginCode != null) {
          const result = await auth.check(loginCode);
          if (result == 'SUCCESS') {
            const shopId = auth.getConfig('shop_id');
            console.debug(`shop_id: ${shopId}`);
            if (shopId != null) {
              this.$switch('home');
            } else {
              this.$redirect('shops');
            }
          } else {
            await auth.session();
          }
        } else {
          await auth.session();
          WxUtils.checkSDK();
        }
        console.debug(`login_fail: ${loginCode}`);
      } catch (e) {
        await auth.removeConfig('login_code');
        await auth.session();
      } finally {
        this.loaded();
      }
    }
    /**
     * 游客登录
     */
    async guestLogin() {
      const account = await auth.auditAccount();
      Tips.loaded();
      if (account != null) {
        await Tips.confirm('即将使用演示账号登录，所有数据皆为模拟数据\n商务合作请联系13559122901咨询');
        await this.smsLogin(account.user, account.pwd);
      } else {
        await Tips.confirm('尚未配置演示账号\n商务合作请联系13559122901咨询');
        wepy.makePhoneCall({phoneNumber: '13559122901'});
      }
    };
    /**
     * 处理登录异常
     */
    async handleLoginException(error) {
      Tips.loaded();
      console.info('[login] error', error);
      if (error.serverCode == 10007) {
        await Tips.confirm('该手机尚未注册，是否使用演示账号登录？');
        await this.guestLogin();
      } else if (error.serverCode == 10008) {
        await Tips.modal('验证码错误，请重新输入');
        this.input.code = '';
      } else if (error.serverCode == 10005) {
        this.$invoke('VCode', 'cd', 60);
        this.tips('验证码请求太频繁，请稍后');
      } else {
        await Tips.modal('认证异常，请联系管理员咨询');
        wepy.makePhoneCall({phoneNumber: '17759196220'});
      }
    }
    /**
     * 处理登录成功
     */
    async handleLoginSuccess() {
      // 店铺跳转
      const shops = await shop.list();
      if (shops == null && shops.length == 0) {
        await Tips.modal('您尚未注册店铺');
      } else if (shops.length == 1) {
        await Tips.success('登录成功')
        await auth.setConfig('shop_id', shops[0].shopId);
        if (this.redirectUrl) {
          this.$redirect(this.redirectUrl);
        } else {
          this.$switch('home');
        }
      } else {
        this.$redirect('shops');
      }
    }
    async smsLogin(phone, code) {
      // 验证码登录
      try {
        const loginCode = await auth.login(phone, code);
        await auth.setConfig('login_code', loginCode);
        await this.handleLoginSuccess();
      } catch (err) {
        await this.handleLoginException(err);
      } finally {
        this.loaded();
      }
    }
    methods = {
      switchMode(mode) {
        this.mode = mode;
      },
      /**
       * 一键登录
       */
      async fastLogin({detail}) {
        // 授权检查
        if (detail.errMsg == 'getPhoneNumber:fail user deny') {
          await Tips.alert('请允许授权');
          return;
        }
        // 一键登录
        try {
          await auth.wxLogin(detail);
          await this.handleLoginSuccess();
        } catch (err) {
          await this.handleLoginException(err);
          this.mode = 'sms';
        } finally {
          this.loaded();
        }
      },
      async confirm({detail}) {
        // 覆盖表单对象
        Object.assign(this.loginMassage, detail.value);
        if (!this.isValid(this.input.phone)) {
          return;
        }
        // 验证码登录
        await this.smsLogin(this.input.phone, this.loginMassage.code);
      },
      async code() {
        if (!this.isPhoneValid(this.input.phone)) {
          return;
        }
        // 发送验证码
        try {
          await auth.sms(this.input.phone);
          this.$invoke('VCode', 'cd', 60);
          Tips.success('验证码已发送');
        } catch (err) {
          await this.handleLoginException(err);
        } finally {
          this.loaded();
        }
      }
    };
    onShareAppMessage () {
      const title = '乐享商家助手';
      const url = '/pages/home/index';
      return Tips.share(title, url, title);
    }
    /**
     * 校验表单提交
     */
    isValid(phone) {
      if (!this.isPhoneValid(phone)) {
        return false;
      }
      if (this.isEmpty(this.loginMassage.code)) {
        this.tips('请输入验证码');
        return false;
      }
      return true;
    }
    /**
     * 校验电话号码
     */
    isPhoneValid(phone) {
      if (this.isEmpty(phone)) {
        this.tips('请输入手机号码');
        return false;
      }
      const reg = /^1[34578]\d{9}$/;
      if (!reg.test(phone)) {
        this.tips('电话号码格式错误');
        return false;
      }
      return true;
    }
    mixins = [input, base];
    config = {
      navigationBarTitleText: '商家登录'
    };
    components = {
      Tips: FormTips,
      VCode: VCode,
      Copyright: Copyright
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
  .brand{
    padding-top: 60rpx;
    padding-bottom: 60rpx;

    .logo{
      width: 100px;
      height: 100px;
    }

    text{
      margin-top: 15rpx;
      font-size: $text-form;
    }
  }
</style>
